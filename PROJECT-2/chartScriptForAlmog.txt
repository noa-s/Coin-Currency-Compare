

function liveReportsBtn() {
    // $('html, body').animate({
    //     scrollTop: $(`#liveReports`).offset().top
    // }, 2000);x   
    
    if (!(this.classList.contains("active"))) {

        $("#liveReports").load("reportsHtml.txt");
        $(".form-inline").hide();
        $("a[name='liveReports']").addClass("active");
        $("a[name='home']").removeClass("active");
        $("a[name='about']").removeClass("active");

        console.log($("#home").height());
        console.log($( window ).height());
        
        // debugger;
        // scrollToDiv("liveReports");
        // deleteOtherDivs(this.name);
        
        generatReport();
    }

}

function generatReport(){
    var selectedCoinsArr = JSON.parse(localStorage.getItem("selectedCoins"));
    if (selectedCoinsArr.length > 0) {
        $("#chartContainer").html("");
        var uppercaseArr = $.map(selectedCoinsArr, function (c) {
            return c.toUpperCase();
        });

        var chartData = createVariables(uppercaseArr);
        var str = uppercaseArr.join(",");
        $.getJSON(`https://min-api.cryptocompare.com/data/pricemulti?fsyms=${str}&tsyms=USD`, function (dataAPI) {

            for (var i = 0; i < chartData.length; i++) {
                let currname = chartData[i].name;
                chartData[i].yValue = dataAPI[currname].USD;
                chartData[i].dataPoints[0].y = chartData[i].yValue;
            }
        }).always(function () {
            drawChart(chartData, str);
        });
    }
}

function createVariables(uppercaseArr) {
    var dataArr = [];
    for (var i = 0; i < uppercaseArr.length; ++i) {
        dataArr[i] = {
            type: "line",
            xValueType: "dateTime",
            yValueFormatString: "###.00Wh",
            xValueFormatString: "hh:mm:ss TT",
            showInLegend: true,

            name: uppercaseArr[i],
            dataPoints: [{
                x: new Date(),
                y: 0
            }],
            yValue: 0
        };
    }
    return dataArr;
}


function drawChart(chartData, str) {

    var data = chartData;
    var options = {
        title: {
            text: "Selected Coins USD value"
        },
        axisX: {
            title: "chart updates every 2 secs"
        },
        axisY: {
            suffix: "USD",
            includeZero: false
        },
        toolTip: {
            shared: true
        },
        legend: {
            cursor: "pointer",
            verticalAlign: "top",
            fontSize: 22,
            fontColor: "dimGrey",
            itemclick: toggleDataSeries
        },
        data: data
    };

    var chart = $("#chartContainer").CanvasJSChart(options);

    function toggleDataSeries(e) {
            if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
            e.dataSeries.visible = false;
        } else {
            e.dataSeries.visible = true;
        }
        e.chart.render();
    }

    var updateInterval = 2000;

    var time = new Date($.now());
    // time.getHours();
    // time.getMinutes();
    // time.getSeconds();
    // time.getMilliseconds();


    function updateChart() {
        time.setTime(time.getTime() + updateInterval);

        for (var i = 0; i < data.length; i++) {
            // pushing the new values
            data[i].dataPoints.push({
                x: time.getTime(),
                y: data[i].yValue
            });
            options.data[i].legendText = `${data[i].name} : ` + data[i].yValue + "USD";
        }
        $("#chartContainer").CanvasJSChart().render();
    }
    // generates first set of dataPoints 
    updateChart();
    setInterval(function () {
        $.getJSON(`https://min-api.cryptocompare.com/data/pricemulti?fsyms=${str}&tsyms=USD`, function (dataAPI) {

            for (var i = 0; i < data.length; i++) {
                let currname = data[i].name;
                data[i].yValue = dataAPI[currname].USD;
                data[i].dataPoints[0].y = data[i].yValue;
            }
        }).always(function () {
            updateChart(data);
        });
    }, updateInterval);

}